install.packages(c("readr","dplyr","ggplot2","choroplethr","rgdal","maptools","jsonlite"))

library(readr)
library(dplyr)
library(ggplot2)
library(choroplethr)
library(rgdal)
library(maptools)
library(jsonlite)



X103_ab103_C <- read_csv("C:/Users/USER/Downloads/103_ab103_C.csv")
X104_ab104_C <- read_csv("C:/Users/USER/Downloads/104_ab104_C.csv")
X105_ab105_C <- read_csv("C:/Users/USER/Downloads/105_ab105_C.csv")
X106_ab105_C <- read_csv("C:/Users/USER/Downloads/106_ab105_C.csv")


names(X103_ab103_C)[3:10] <-gsub("-","_",names(X103_ab103_C)[3:10])
names(X104_ab104_C)[3:10] <-gsub("-","_",names(X104_ab104_C)[3:10])
newdata1 <- rbind(X103_ab103_C,X104_ab104_C,X105_ab105_C,X106_ab105_C)


school103 <- read_csv("C:/Users/USER/Downloads/103_ab103_S.csv")
school104 <- read_csv("C:/Users/USER/Downloads/104_ab104_S.csv")
school105 <- read_csv("C:/Users/USER/Downloads/105_ab105_S.csv")
school106 <- read_csv("C:/Users/USER/Downloads/106_ab105_S.csv")

names(school103)[4:11] <-gsub("-","_",names(school103)[4:11])
names(school104)[4:11] <-gsub("-","_",names(school104)[4:11])

school104 <- school104[-151,] 
school105 <- school105[-151,] 
school106 <- school106[-151,] 
newschool <- rbind(school103,school104,school105,school106)


newschool$非學位生_大陸研修生 <- gsub("…","0",newschool$非學位生_大陸研修生)
newschool$非學位生_大陸研修生 <- as.numeric(newschool$非學位生_大陸研修生)


newdata1$學生總數<- rowSums(newdata1[3:11])

newschool$學生總數 <- rowSums(newschool[4:12])

ans1 <- group_by(newdata1,國別)%>%
summarise(totalpeople = sum(學生總數))%>%
arrange(desc(totalpeople))

  
ans2  <- group_by(newschool,學校名稱)%>%
  summarise(total = sum(學生總數))%>%
  arrange(desc(total))
    

ggplot()+geom_bar(data = ans1,
                  aes(x = 國別,y = totalpeople),
                  stat = 'identity')+
                  theme(axis.text.x = element_text(angle = 90, hjust = 1))

ggplot()+geom_bar(data = ans3,
                  aes(x = 對方學校.機構.國別.地區.,y = total),
                  stat = 'identity')+
  theme(axis.text.x = element_text(angle = 90, hjust = 1))



countries <- fromJSON("C:/Users/USER/Downloads/countries.json")  

ans11 <- group_by(newdata1,國別)%>%
  summarise(totalpeople = sum(學生總數))

for(i in 1:nrow(ans11)){
  for(j in 1:nrow(countries)){
    if(ans11$國別[i]==countries$Taiwan[j]){
      ans11$國別[i] <- countries$ISO2[j]
    }
    else if(substr(ans11$國別[i],1,2)==substr(countries$Taiwan[j],1,2)){
      ans11$國別[i] <- countries$ISO2[j]
    }
  }
}

ans11$國別[50] <- "HK"
ans11$國別[67] <- "BA"
ans11$國別[72] <- "RO"
ans11$國別[80] <- "KR"
ans11$國別[87] <- "VG"
ans11$國別[108] <- "MX"
ans11$國別[112] <- "RS"
ans11$國別[167] <- "AW"
ans11$國別[173] <- "CV"

Country_Latitude_Longitude <- read_csv("C:/Users/USER/Downloads/Country_List_ISO_3166_Codes_Latitude_Longitude.csv")

library(rworldmap)
library(ggplot2)


names(ans11)<-c("Alpha-2 code","total")
world_lat_long <- left_join(ans11,Country_Latitude_Longitude, by = "Alpha-2 code")

world_lat_long$`Longitude (average)` <- as.numeric(world_lat_long$`Longitude (average)`)
world_lat_long$`Latitude (average)`<- as.numeric(world_lat_long$`Latitude (average)`)


map.world <- map_data(map="world")

ggplot()+ 
  theme(legend.position="none")+
  geom_map(data=map.world, map=map.world, aes(map_id=region, x=long, y=lat,fill=group))+ 
  geom_point(data=world_lat_long,
             aes(x=`Longitude (average)`, y=`Latitude (average)`,color=total),size=3)+
  scale_color_continuous(low = "sandybrown",high = "red")+ 
  guides(size=FALSE)

A <- read.csv("C:/Users/USER/Downloads/A.csv")
stubd <- A[10799:nrow(A),]

ans3  <- group_by(stubd,對方學校.機構.國別.地區.)%>%
  summarise(total = n())%>%
  arrange(desc(total))

ans4  <- group_by(stubd,學校名稱)%>%
  summarise(total = n())%>%
  arrange(desc(total))

u1_new <- read_csv("C:/Users/USER/Downloads/u1_new.csv")

library(XML)
URL <- "http://download.post.gov.tw/post/download/1050812_%E8%A1%8C%E6%94%BF%E5%8D%80%E7%B6%93%E7%B7%AF%E5%BA%A6%28toPost%29.xml"
CT <- xmlParse(URL)
CT1 <- xmlToDataFrame(CT)

names(CT1)[1] <- "地址"
names(CT1)[2] <- "郵遞區號"
names(CT1)[3] <- "longitude"
names(CT1)[4] <- "latitude"

CT1$longitude <- as.numeric(as.character(CT1$longitude))
CT1$latitude <- as.numeric(as.character(CT1$latitude))

u1_new$地址 <- substr(u1_new$地址,6,11)
u1_new$地址[2] <- substr(u1_new$地址[2],1,5)
u1_new$地址[5] <- substr(u1_new$地址[5],1,5)
u1_new$地址[6] <- substr(u1_new$地址[6],1,5)
u1_new$地址[7] <- substr(u1_new$地址[7],1,5)
u1_new$地址[16] <- substr(u1_new$地址[16],1,5)
u1_new$地址[36] <- substr(u1_new$地址[36],1,5)
u1_new$地址[37] <- substr(u1_new$地址[37],1,5)
u1_new$地址[44] <- substr(u1_new$地址[44],1,5)
u1_new$地址[45] <- substr(u1_new$地址[45],1,5)
u1_new$地址[76] <- substr(u1_new$地址[76],1,5)
u1_new$地址[82] <- substr(u1_new$地址[82],1,5)
u1_new$地址[140] <- substr(u1_new$地址[140],1,5)
u1_new$地址[157] <- substr(u1_new$地址[157],1,5)

u1_new <- u1_new[,c(-5,-6,-7)]

result <- merge(CT1,u1_new,by = "地址")
result <- merge(result,ans4,by = "學校名稱")

library(ggmap)
twmap <- get_googlemap(center = c(lon=120.58,lat=23.58), 
                       zoom = 8,
                       language = "zh-TW")
ggmap(twmap)+geom_point(data = result,
                        aes(x=longitude,y=latitude,color = total),size=3)+
  scale_color_continuous(low = "yellow",high = "red")+ 
  guides(size=FALSE)


library(jsonlite)
library(readr)
library(dplyr)

stuTW <- read_csv("C:/Users/USER/Downloads/105TW.csv")
head(stuTW[order(stuTW$總人數,decreasing = TRUE),],10)

countries <- fromJSON("C:/Users/USER/Downloads/countries.json")  

for(i in 1:nrow(stuTW)){
  for(j in 1:nrow(countries)){
    if(stuTW$國別[i]==countries$Taiwan[j]){
      stuTW$英文[i] <- countries$ISO2[j]
    }
  }
}

stuTW<-stuTW[,c(1,3,7)]
names(stuTW)<-c("州别","總人數","Alpha-2 code")

Country_Latitude_Longitude <- read_csv("C:/Users/USER/Downloads/Country_List_ISO_3166_Codes_Latitude_Longitude.csv")

library(rworldmap)
library(ggplot2)

Map_stuTW <- left_join(stuTW,Country_Latitude_Longitude, by = "Alpha-2 code")

Map_stuTW$`Longitude (average)` <- as.numeric(Map_stuTW$`Longitude (average)`)
Map_stuTW$`Latitude (average)`<- as.numeric(Map_stuTW$`Latitude (average)`)

map.world <- map_data(map="world")

ggplot()+ 
  theme(legend.position="none")+
  geom_map(data=map.world, map=map.world, aes(map_id=region, x=long, y=lat,fill=group))+ 
  geom_point(data=Map_stuTW,
             aes(x=`Longitude (average)`, y=`Latitude (average)`,color=總人數),size=3)+
  scale_color_continuous(low = "sandybrown",high = "red")+ 
  guides(size=FALSE)
  
  
  install.packages("rworldmap")
  

  